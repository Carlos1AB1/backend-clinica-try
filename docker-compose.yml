services:
  # Base de datos para microservicio de autenticación
  auth_db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${AUTH_DB_NAME:-auth_db}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_USER: ${AUTH_DB_USER:-auth_user}
      MYSQL_PASSWORD: ${AUTH_DB_PASSWORD:-auth_password}
    ports:
      - "3316:3306"
    volumes:
      - auth_db_data:/var/lib/mysql
    networks:
      - veterinary_network

  # Base de datos para microservicio de usuarios
  users_db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${USERS_DB_NAME:-users_db}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_USER: ${USERS_DB_USER:-users_user}
      MYSQL_PASSWORD: ${USERS_DB_PASSWORD:-users_password}
    ports:
      - "3307:3306"
    volumes:
      - users_db_data:/var/lib/mysql
    networks:
      - veterinary_network

  # Base de datos para microservicio de citas
  appointments_db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${APPOINTMENTS_DB_NAME:-appointments_db}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_USER: ${APPOINTMENTS_DB_USER:-appointments_user}
      MYSQL_PASSWORD: ${APPOINTMENTS_DB_PASSWORD:-appointments_password}
    ports:
      - "3308:3306"
    volumes:
      - appointments_db_data:/var/lib/mysql
    networks:
      - veterinary_network

  # Base de datos para microservicio de historia clínica
  medical_records_db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${MEDICAL_DB_NAME:-medical_records_db}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_USER: ${MEDICAL_DB_USER:-medical_user}
      MYSQL_PASSWORD: ${MEDICAL_DB_PASSWORD:-medical_password}
    ports:
      - "3309:3306"
    volumes:
      - medical_records_db_data:/var/lib/mysql
    networks:
      - veterinary_network

  # Base de datos para microservicio de recetas
  prescriptions_db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${PRESCRIPTIONS_DB_NAME:-prescriptions_db}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_USER: ${PRESCRIPTIONS_DB_USER:-prescriptions_user}
      MYSQL_PASSWORD: ${PRESCRIPTIONS_DB_PASSWORD:-prescriptions_password}
    ports:
      - "3310:3306"
    volumes:
      - prescriptions_db_data:/var/lib/mysql
    networks:
      - veterinary_network

  # Base de datos para microservicio de reportes
  reports_db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${REPORTS_DB_NAME:-reports_db}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_USER: ${REPORTS_DB_USER:-reports_user}
      MYSQL_PASSWORD: ${REPORTS_DB_PASSWORD:-reports_password}
    ports:
      - "3311:3306"
    volumes:
      - reports_db_data:/var/lib/mysql
    networks:
      - veterinary_network

  # Redis para caché y Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - veterinary_network

  # Microservicio de Autenticación
  auth_service:
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
    ports:
      - "8001:8000"
    environment:
      - DEBUG=${DEBUG:-True}
      - DB_NAME=${AUTH_DB_NAME:-auth_db}
      - DB_USER=${AUTH_DB_USER:-auth_user}
      - DB_PASSWORD=${AUTH_DB_PASSWORD:-auth_password}
      - DB_HOST=${AUTH_DB_HOST:-auth_db}
      - DB_PORT=${AUTH_DB_PORT:-3306}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-super-secret-jwt-key}
      - EMAIL_HOST=${EMAIL_HOST:-smtp.gmail.com}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
    depends_on:
      - auth_db
      - redis
    networks:
      - veterinary_network

  # Microservicio de Usuarios
  users_service:
    build:
      context: .
      dockerfile: ./users-service/Dockerfile
    ports:
      - "8002:8000"
    environment:
      - DEBUG=${DEBUG:-True}
      - DB_NAME=${USERS_DB_NAME:-users_db}
      - DB_USER=${USERS_DB_USER:-users_user}
      - DB_PASSWORD=${USERS_DB_PASSWORD:-users_password}
      - DB_HOST=${USERS_DB_HOST:-users_db}
      - DB_PORT=${USERS_DB_PORT:-3306}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL:-http://auth_service:8000}
    depends_on:
      - users_db
      - auth_service
    networks:
      - veterinary_network

  # Microservicio de Citas
  appointments_service:
    build:
      context: .
      dockerfile: ./appointments-service/Dockerfile
    ports:
      - "8003:8000"
    environment:
      - DEBUG=${DEBUG:-True}
      - DB_NAME=${APPOINTMENTS_DB_NAME:-appointments_db}
      - DB_USER=${APPOINTMENTS_DB_USER:-appointments_user}
      - DB_PASSWORD=${APPOINTMENTS_DB_PASSWORD:-appointments_password}
      - DB_HOST=${APPOINTMENTS_DB_HOST:-appointments_db}
      - DB_PORT=${APPOINTMENTS_DB_PORT:-3306}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL:-http://auth_service:8000}
      - USERS_SERVICE_URL=${USERS_SERVICE_URL:-http://users_service:8000}
    depends_on:
      - appointments_db
      - auth_service
      - users_service
    networks:
      - veterinary_network

  # Microservicio de Historia Clínica
  medical_records_service:
    build:
      context: .
      dockerfile: ./medical-records-service/Dockerfile
    ports:
      - "8004:8000"
    environment:
      - DEBUG=${DEBUG:-True}
      - DB_NAME=${MEDICAL_DB_NAME:-medical_records_db}
      - DB_USER=${MEDICAL_DB_USER:-medical_user}
      - DB_PASSWORD=${MEDICAL_DB_PASSWORD:-medical_password}
      - DB_HOST=${MEDICAL_DB_HOST:-medical_records_db}
      - DB_PORT=${MEDICAL_DB_PORT:-3306}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL:-http://auth_service:8000}
      - USERS_SERVICE_URL=${USERS_SERVICE_URL:-http://users_service:8000}
      - MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE:-10485760}
    depends_on:
      - medical_records_db
      - auth_service
      - users_service
    networks:
      - veterinary_network

  # Microservicio de Recetas
  prescriptions_service:
    build:
      context: .
      dockerfile: ./prescriptions-service/Dockerfile
    ports:
      - "8005:8000"
    environment:
      - DEBUG=${DEBUG:-True}
      - DB_NAME=${PRESCRIPTIONS_DB_NAME:-prescriptions_db}
      - DB_USER=${PRESCRIPTIONS_DB_USER:-prescriptions_user}
      - DB_PASSWORD=${PRESCRIPTIONS_DB_PASSWORD:-prescriptions_password}
      - DB_HOST=${PRESCRIPTIONS_DB_HOST:-prescriptions_db}
      - DB_PORT=${PRESCRIPTIONS_DB_PORT:-3306}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL:-http://auth_service:8000}
      - MEDICAL_RECORDS_SERVICE_URL=${MEDICAL_RECORDS_SERVICE_URL:-http://medical_records_service:8000}
    depends_on:
      - prescriptions_db
      - auth_service
      - medical_records_service
    networks:
      - veterinary_network

  # Microservicio de Reportes
  reports_service:
    build:
      context: .
      dockerfile: ./reports-service/Dockerfile
    ports:
      - "8006:8000"
    environment:
      - DEBUG=${DEBUG:-True}
      - DB_NAME=${REPORTS_DB_NAME:-reports_db}
      - DB_USER=${REPORTS_DB_USER:-reports_user}
      - DB_PASSWORD=${REPORTS_DB_PASSWORD:-reports_password}
      - DB_HOST=${REPORTS_DB_HOST:-reports_db}
      - DB_PORT=${REPORTS_DB_PORT:-3306}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL:-http://auth_service:8000}
    depends_on:
      - reports_db
      - auth_service
    networks:
      - veterinary_network

volumes:
  auth_db_data:
  users_db_data:
  appointments_db_data:
  medical_records_db_data:
  prescriptions_db_data:
  reports_db_data:

networks:
  veterinary_network:
    driver: bridge 