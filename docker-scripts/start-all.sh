#!/bin/bash

# Script para iniciar todos los servicios Docker
# Cl√≠nica Veterinaria - Microservicios

set -e

echo "üöÄ =========================================="
echo "üè• INICIANDO CL√çNICA VETERINARIA"
echo "üöÄ =========================================="

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Navegar al directorio ra√≠z
cd "$(dirname "$0")/.."

echo -e "${BLUE}üîç Verificando Docker...${NC}"
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker no est√° instalado${NC}"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo -e "${RED}‚ùå Docker Compose no est√° instalado${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Docker est√° disponible${NC}"
echo ""

# Detener servicios existentes
echo -e "${YELLOW}üõë Deteniendo servicios existentes...${NC}"
docker-compose down --remove-orphans

echo ""
echo -e "${BLUE}üèóÔ∏è Construyendo e iniciando servicios...${NC}"

# Iniciar servicios
docker-compose up -d --build

echo ""
echo -e "${YELLOW}‚è≥ Esperando que los servicios est√©n listos...${NC}"
sleep 30

echo ""
echo -e "${GREEN}üéâ =========================================="
echo "üè• CL√çNICA VETERINARIA INICIADA"
echo "üéâ ==========================================${NC}"
echo ""
echo -e "${BLUE}üìã Servicios disponibles:${NC}"
echo ""
echo -e "${YELLOW}üîê Auth Service:${NC}          http://localhost:8001"
echo -e "${YELLOW}üë• Users Service:${NC}         http://localhost:8002"
echo -e "${YELLOW}üìÖ Appointments Service:${NC}  http://localhost:8003"
echo -e "${YELLOW}üè• Medical Records Service:${NC} http://localhost:8004"
echo -e "${YELLOW}üíä Prescriptions Service:${NC} http://localhost:8005"
echo -e "${YELLOW}üìä Reports Service:${NC}       http://localhost:8006"
echo ""
echo -e "${BLUE}üìä Bases de datos MySQL:${NC}"
echo -e "${YELLOW}   ‚Ä¢ Auth DB:${NC}           localhost:3306"
echo -e "${YELLOW}   ‚Ä¢ Users DB:${NC}          localhost:3307"
echo -e "${YELLOW}   ‚Ä¢ Appointments DB:${NC}   localhost:3308"
echo -e "${YELLOW}   ‚Ä¢ Medical Records DB:${NC} localhost:3309"
echo -e "${YELLOW}   ‚Ä¢ Prescriptions DB:${NC}  localhost:3310"
echo -e "${YELLOW}   ‚Ä¢ Reports DB:${NC}        localhost:3311"
echo ""
echo -e "${BLUE}üîß Herramientas:${NC}"
echo -e "${YELLOW}   ‚Ä¢ Redis:${NC}             localhost:6379"
echo ""
echo -e "${GREEN}üìñ Documentaci√≥n API:${NC}"
echo -e "${YELLOW}   ‚Ä¢ Auth Swagger:${NC}      http://localhost:8001/api/docs/"
echo -e "${YELLOW}   ‚Ä¢ Users Swagger:${NC}     http://localhost:8002/api/docs/"
echo -e "${YELLOW}   ‚Ä¢ Appointments Swagger:${NC} http://localhost:8003/api/docs/"
echo -e "${YELLOW}   ‚Ä¢ Medical Swagger:${NC}   http://localhost:8004/api/docs/"
echo -e "${YELLOW}   ‚Ä¢ Prescriptions Swagger:${NC} http://localhost:8005/api/docs/"
echo -e "${YELLOW}   ‚Ä¢ Reports Swagger:${NC}   http://localhost:8006/api/docs/"
echo ""
echo -e "${BLUE}üë§ Usuarios por defecto:${NC}"
echo -e "${YELLOW}   ‚Ä¢ Admin:${NC}       admin@clinica.com / Admin123!"
echo -e "${YELLOW}   ‚Ä¢ Veterinario:${NC} vet@clinica.com / Vet123!"
echo -e "${YELLOW}   ‚Ä¢ Recepcionista:${NC} recep@clinica.com / Recep123!"
echo ""
echo -e "${GREEN}üîß Comandos √∫tiles:${NC}"
echo -e "${YELLOW}   ‚Ä¢ Ver logs:${NC}      docker-compose logs -f [servicio]"
echo -e "${YELLOW}   ‚Ä¢ Detener todo:${NC}  docker-compose down"
echo -e "${YELLOW}   ‚Ä¢ Reiniciar:${NC}     docker-compose restart [servicio]"
echo -e "${YELLOW}   ‚Ä¢ Estado:${NC}        docker-compose ps" 